name: MarketPlace CI

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --exclude-task test --exclude-task pmdMain --exclude-task pmdTest --warning-mode=all

      - name: Finalize Build
        run: echo "Build completed successfully!"

  test:
    needs: build
    runs-on: ubuntu-20.04

    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DB_URL: jdbc:postgresql://localhost:5432/testdb
      DB_USERNAME: postgres
      DB_PASSWORD: password

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Run Tests with Gradle
        run: |
          ./gradlew test jacocoTestReport -Dspring.datasource.url=${DB_URL} -Dspring.datasource.username=${DB_USERNAME} -Dspring.datasource.password=${DB_PASSWORD}

      - name: Finalize Test
        run: echo "Tests completed successfully!"

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html

      - name: Finalize Report of Coverage
        run: echo "Report created!"

  pmd-analysis:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Run PMD Analysis with Gradle
        run: ./gradlew runPmd

      - name: Upload PMD Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: pmd-report
          path: build/reports/pmd

      - name: Finalize PMD Analysis
        run: echo "PMD Analysis completed successfully!"
