plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'pmd'
}

group = 'ua'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

apply from: 'jacoco-config.gradle'

jacoco {
    toolVersion = "0.8.7"
}

pmd {
    toolVersion = '6.33.0'
    ruleSets = ['java-basic', 'java-design', 'java-unusedcode']
    ignoreFailures = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.jacoco:org.jacoco.core:0.8.7'
    implementation 'org.jacoco:org.jacoco.report:0.8.7'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'net.sourceforge.pmd:pmd:6.33.0'
    testImplementation 'net.sourceforge.pmd:pmd-java:6.33.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: jacocoExcludes)
        })
    }
}

task runPmd(type: Pmd) {
    description = 'Run PMD analysis on the Java source code'
    group = 'verification'
    source = sourceSets.main.allJava
    include '**/*.java'
    exclude '**/MarketplaceApplication.java'
}